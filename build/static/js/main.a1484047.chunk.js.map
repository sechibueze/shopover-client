{"version":3,"sources":["_actions/types.js","_reducers/AuthReducer.js","_reducers/CartReducer.js","_reducers/AlertReducer.js","_reducers/ProductReducer.js","_reducers/CollectionReducer.js","_reducers/PaymentReducer.js","_reducers/indexReducer.js","store.js","_actions/AlertActions.js","_actions/AuthActions.js","components/Navbar/Navbar.js","_utils/constants.js","_actions/ProductActions.js","components/ProductCard/ProductCard.js","_actions/CartActions.js","components/Title/Title.js","components/ProductItems/ProductItems.js","components/Home/Home.js","components/Alert/Alert.js","components/Register/Register.js","components/Login/Login.js","components/Shop/Shop.js","components/Cart/CartItems.js","components/Cart/Cart.js","components/AuthSidebar.js","components/AuthContainer.js","components/Dashboard/Dashboard.js","components/Dashboard/Authenticate.js","components/Modal.js","components/ProductManager/AddProductForm.js","components/ProductManager/EditProductForm.js","components/ProductManager/ProductManager.js","_actions/CollectionActions.js","components/Collections/AddCollectionForm.js","components/Collections/EditCollectionForm.js","components/Collections/CollectionManager.js","components/UserManager/UserManager.js","components/Login/Secret.js","components/TransactionManager/CallbackHandler.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","LOADED","intialState","token","isAuthenticated","currentUser","loading","prevUser","userData","loadedUser","userRoleUpdate","initialState","items","alertBucket","productItems","newProduct","productDeleted","productUpdated","productVisibility","newCollection","collectionItems","collectionEdited","collectionDeleted","initializePayment","combineReducers","auth","state","action","type","payload","localStorage","removeItem","cart","filter","item","_id","alerts","concat","alert","alertId","products","productVisibilitygit","collections","payments","middleware","ReduxThunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","cartManager","cartItems","getItem","JSON","parse","err","console","log","getCartFromLocalStorage","store","createStore","indexReducer","applyMiddleware","subscribe","cartState","stringifyCartItems","stringify","setItem","saveCartToLocalStorage","getState","setAlert","alertText","origin","v4","timeout","dispatch","setTimeout","handleResponseErrors","toString","response","status","data","errors","error","request","responseText","getConfigHeaders","configHeaders","headers","loadCurrentUser","config","url","axios","get","then","catch","e","logout","connect","className","data-test","id","to","htmlFor","length","onClick","getProductItems","query","params","addProductToCart","product","existingCartItems","foundItemInCart","find","map","quantity","parseInt","title","price","productImage","src","alt","description","handleAddToCart","Title","subTitle","class","useEffect","visibility","idx","key","Home","clearAlert","displayAlerts","registerUser","post","useState","firstname","lastname","email","password","confirm_password","setData","handleChange","target","name","value","prev","onSubmit","preventDefault","trim","onChange","placeholder","loginUser","Shop","updateProductQuantity","productId","newQuantity","cartItem","removeItemFromCart","itemId","style","width","height","min","updateQuantity","parseFloat","history","paymentUrl","setPaymentUrl","calculateTotalPay","total","paystackPayload","amount","callback_url","authorization_url","handlePayment","href","roles","includes","AuthContainer","children","Component","component","rest","render","props","Modal","dismiss","isOpen","addProduct","productData","productCategory","setProductCategory","category","tags","required","pattern","selected","cat","updateProductById","put","productRecord","join","toggleProductVisibility","resetProduct","deleteProductById","delete","shouldAddProduct","handleAddProductModal","productItemToEdit","canEdit","shouldEditProduct","handleEditProductModal","owner","isAdmin","handleAddProductRequest","handleEditProduct","shouldUserEdit","handleEditProductRequest","confirm","createCollection","collectionData","updateCollectionById","collectionId","prevData","getCollections","resetCollection","deleteCollectionById","canAddCollection","setCanAddCollection","canEditCollection","collectionInfo","editCollectionData","setEditCollectionData","handleCanAddCollectionRequest","dismissEditCollection","collection","slice","startEditCollectionRequest","loadUsers","deleteUsers","filterID","user","updateUserRole","CallbackHandler","location","hasCompleted","setHasCompleted","reference","URLSearchParams","search","body","App","path","exact","Cart","Register","Login","Secret","Dashboard","ProductManager","CollectionManager","UserManager","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a1484047.chunk.js","sourcesContent":["export const baseURL = process.env.NODE_ENV !== 'production' ? 'http://localhost:5000' : 'https://shopover.herokuapp.com';\r\n// Payment\r\n\r\nexport const PAY_WITH_PAYSTACK = 'PAY_WITH_PAYSTACK';\r\n\r\n// ?User Manager\r\nexport const LOAD_USERS = 'LOAD_USERS';\r\nexport const LOAD_USER_WITH_ID = 'LOAD_USER_WITH_ID';\r\nexport const DELETE_USER_WITH_ID = 'DELETE_USER_WITH_ID';\r\nexport const DELETE_USERS = 'DELETE_USERS';\r\nexport const UPDATE_USER_ROLE = 'UPDATE_USER_ROLE';\r\n\r\n// Collections\r\nexport const CREATE_COLLECTION = 'CREATE_COLLECTION';\r\nexport const EDIT_COLLECTION = 'EDIT_COLLECTION';\r\nexport const DELETE_COLLECTION = 'DELETE_COLLECTION';\r\nexport const RESET_COLLECTION = 'RESET_COLLECTION';\r\nexport const GET_COLLECTIONS = 'GET_COLLECTIONS';\r\n// export const CREATE_COLLECTION = 'CREATE_COLLECTION';\r\n\r\n\r\n// Products\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const GET_PRODUCT = 'GET_PRODUCT';\r\nexport const GET_PRODUCT_ITEMS = 'GET_PRODUCT_ITEMS';\r\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\r\nexport const TOGGLE_PRODUCT_VISIBILITY = 'TOGGLE_PRODUCT_VISIBILITY';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\nexport const RESET_PRODUCT = 'RESET_PRODUCT';\r\n\r\n\r\n// Alert\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const CLEAR_ALERT = 'CLEAR_ALERT';\r\n\r\n\r\n// Auth\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const LOADING = 'LOADING';\r\nexport const LOADED = 'LOADED';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n// Cart \r\nexport const ADD_CART = 'ADD_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const UPDATE_CART = 'UPDATE_CART';\r\nexport const UPDATE_PRODUCT_QUANTITY = 'UPDATE_PRODUCT_QUANTITY';\r\nexport const CLEAR_CART = 'CLEAR_CART';","import {\r\n  REGISTER_USER,\r\n  REGISTER_FAIL,\r\n  LOGIN_USER,\r\n  LOGIN_FAIL,\r\n  AUTH_FAIL,\r\n  SET_CURRENT_USER,\r\n  LOAD_USERS,\r\n  LOADING,\r\n  LOGOUT,\r\n  LOADED,\r\n  DELETE_USERS,\r\n  DELETE_USER_WITH_ID,\r\n  LOAD_USER_WITH_ID,\r\n  UPDATE_USER_ROLE,\r\n} from '../_actions/types';\r\n\r\nconst intialState = {\r\n  token: null,\r\n  isAuthenticated: null,\r\n  currentUser: null,\r\n  loading: false,\r\n  prevUser: null,\r\n  userData: [],\r\n  loadedUser: null,\r\n  userRoleUpdate: null\r\n\r\n};\r\nexport default (state = intialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_USER:\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        token: payload\r\n      };\r\n    \r\n      case REGISTER_FAIL:\r\n      case LOGIN_FAIL:\r\n      case AUTH_FAIL:\r\n      case LOGOUT:\r\n        localStorage.removeItem('token');\r\n        return {\r\n          ...state,\r\n          token: null,\r\n          isAuthenticated: null,\r\n          currentUser: null,\r\n\r\n        };\r\n\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: true,\r\n          currentUser: payload,\r\n        };\r\n      case LOAD_USERS:\r\n        return {\r\n          ...state,\r\n          userData: payload\r\n        };\r\n      case LOAD_USER_WITH_ID:\r\n        return {\r\n          ...state,\r\n          loadedUser: payload\r\n        };\r\n      case DELETE_USER_WITH_ID:\r\n      case DELETE_USERS:\r\n        return {\r\n          ...state,\r\n          prevUser: payload\r\n        };\r\n      case UPDATE_USER_ROLE:\r\n        return {\r\n          ...state,\r\n          userRoleUpdate: payload\r\n        };\r\n      case LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case LOADED:\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        };\r\n      \r\n      \r\n  \r\n    default:\r\n      return state;\r\n     \r\n  }\r\n};","import {\r\n  ADD_CART,\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART,\r\n  CLEAR_CART,\r\n  UPDATE_PRODUCT_QUANTITY\r\n} from '../_actions/types';\r\n\r\nconst initialState = {\r\n  items: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ADD_CART:\r\n      return {\r\n        ...state,\r\n        items: [payload, ...state.items]\r\n      };\r\n    case REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item._id !== payload)\r\n      };\r\n    case UPDATE_CART:\r\n    case UPDATE_PRODUCT_QUANTITY:\r\n      return {\r\n        ...state,\r\n        items: payload\r\n      };\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        items: []\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_ALERT, CLEAR_ALERT } from \"../_actions/types\";\r\nconst initialState = {\r\n  alertBucket: []\r\n};\r\nexport default (state=initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alertBucket: state.alertBucket.concat([payload])\r\n      };\r\n\r\n    case CLEAR_ALERT:\r\n      return {\r\n        ...state,\r\n        alertBucket: payload ? state.alertBucket.filter(alert => alert.alertId !== payload) : []\r\n      };\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n};","import {ADD_PRODUCT, TOGGLE_PRODUCT_VISIBILITY, GET_PRODUCT_ITEMS, DELETE_PRODUCT, UPDATE_PRODUCT, RESET_PRODUCT } from \"../_actions/types\";\r\n\r\nconst initialState = {\r\n  productItems: [],\r\n  newProduct: null,\r\n  productDeleted: null,\r\n  productUpdated: null,\r\n  productVisibility: null\r\n};\r\n\r\nexport default (state=initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case ADD_PRODUCT:\r\n      return {\r\n        ...state,\r\n        newProduct: payload\r\n      };\r\n    case GET_PRODUCT_ITEMS:\r\n      return {\r\n        ...state,\r\n        productItems: payload\r\n      };\r\n    case UPDATE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        productUpdated: payload\r\n      };\r\n    case TOGGLE_PRODUCT_VISIBILITY:\r\n      return {\r\n        ...state,\r\n        productVisibilitygit : payload\r\n      };\r\n    case RESET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        productUpdated: null,\r\n        newProduct: null\r\n      };\r\n    case DELETE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        productDeleted: payload\r\n      };\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n};","import {\r\n  CREATE_COLLECTION,\r\n  GET_COLLECTIONS,\r\n  EDIT_COLLECTION,\r\n  RESET_COLLECTION,\r\n  DELETE_COLLECTION\r\n} from '../_actions/types';\r\n\r\nconst initialState = {\r\n  newCollection: null,\r\n  collectionItems: [],\r\n  collectionEdited: null,\r\n  collectionDeleted: null\r\n\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload} = action;\r\n\r\n  switch (type) {\r\n    case CREATE_COLLECTION:\r\n      return {\r\n        ...state,\r\n        newCollection: payload\r\n      };\r\n    case GET_COLLECTIONS:\r\n      return {\r\n        ...state,\r\n        collectionItems: payload\r\n      };\r\n    case EDIT_COLLECTION:\r\n      return {\r\n        ...state,\r\n        collectionEdited: payload\r\n      };\r\n    case RESET_COLLECTION:\r\n      return {\r\n        ...state,\r\n        newCollection: null,\r\n        collectionEdited: null,\r\n        collectionDeleted: null,\r\n      };\r\n    case DELETE_COLLECTION:\r\n      return {\r\n        ...state,\r\n        collectionDeleted: payload\r\n      };\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n};","import {\r\n  PAY_WITH_PAYSTACK,\r\n} from '../_actions/types';\r\n\r\nconst initialState = {\r\n  initializePayment: null\r\n\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload} = action;\r\n\r\n  switch (type) {\r\n    case PAY_WITH_PAYSTACK:\r\n      return {\r\n        ...state,\r\n        initializePayment: payload\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport CartReducer from './CartReducer';\r\nimport AlertReducer from './AlertReducer';\r\nimport ProductReducer from './ProductReducer';\r\nimport CollectionReducer from './CollectionReducer';\r\nimport PaymentReducer from './PaymentReducer';\r\nexport default combineReducers({\r\n  auth: AuthReducer,\r\n  cart: CartReducer,\r\n  alerts: AlertReducer,\r\n  products: ProductReducer,\r\n  collections: CollectionReducer,\r\n  payments: PaymentReducer,\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport indexReducer from './_reducers/indexReducer';\r\nconst middleware = [ReduxThunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose ;\r\n\r\n\r\n\r\nconst saveCartToLocalStorage = cartState => {\r\n  try {\r\n    const stringifyCartItems = JSON.stringify(cartState);\r\n    localStorage.setItem('cart', stringifyCartItems);\r\n  } catch (err) {\r\n    console.log('error in svain to Local Storage', err)\r\n  }\r\n};\r\n\r\nconst getCartFromLocalStorage = () => {\r\n  try {\r\n    const cartItems = localStorage.getItem('cart');\r\n    if(cartItems === null) return undefined\r\n    const cartData = { cart: JSON.parse(cartItems)};\r\n    return cartData\r\n\r\n  } catch (err) {\r\n    console.log('error in svain to Local Storage', err)\r\n  }\r\n};\r\nconst cartManager = getCartFromLocalStorage();\r\n\r\n const store = createStore(\r\n  indexReducer,\r\n  cartManager,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n  );\r\n  \r\nstore.subscribe(() => saveCartToLocalStorage(store.getState().cart));\r\n\r\nexport default store;","import { v4 } from 'uuid';\r\nimport { SET_ALERT, CLEAR_ALERT, LOADED } from './types';\r\n\r\n\r\nexport const setAlert = (alertText, origin = '', type=\"danger\", alertId = v4() ,  timeout=3000 ) => dispatch => {\r\n  \r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { alertText, alertId, origin, type }\r\n  });\r\n\r\n  setTimeout(() => (dispatch({\r\n    type: CLEAR_ALERT,\r\n    payload: alertId\r\n  })), timeout)\r\n}\r\n \r\nexport const clearAlert = (alertId = null) => dispatch => {\r\n  dispatch({\r\n    type: CLEAR_ALERT,\r\n    payload: alertId\r\n  });\r\n};\r\n\r\nexport const handleResponseErrors = (err, origin = \"\", type = 'danger') => dispatch => {\r\n    console.log('err : ', err, origin)\r\n    let payload = {\r\n              alertId: v4(),\r\n              // alertText: e,\r\n              origin, \r\n              type\r\n            }\r\n\r\n    let alertText = err.toString()\r\n    if (err.response) {\r\n      if (err.response.status === 422) {\r\n        alert = err.response.data.errors\r\n      } else {\r\n        \r\n            alertText = typeof err.response.data === 'object' ? err.response.data.error : err.response.data;\r\n            \r\n       \r\n      }\r\n    } else if ( err.request) {\r\n     alertText = err.request.responseText    \r\n    }\r\n  if (err.response.status !== 422 && err.response.data) {\r\n    alertText = err.response.data.error\r\n  }\r\n\r\n  payload.alertText = alertText;\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload\r\n  });\r\n  dispatch({ type: LOADED });\r\n\r\n\r\n};","import axios from 'axios';\r\nimport { handleResponseErrors } from './AlertActions';\r\nimport {\r\n  baseURL,\r\n  REGISTER_USER,\r\n  REGISTER_FAIL,\r\n  LOGIN_USER,\r\n  LOGIN_FAIL,\r\n  AUTH_FAIL,\r\n  SET_CURRENT_USER,\r\n  LOAD_USERS,\r\n  LOAD_USER_WITH_ID,\r\n  LOGOUT,\r\n  DELETE_USER_WITH_ID,\r\n  DELETE_USERS,\r\n  UPDATE_USER_ROLE,\r\n} from './types';\r\n\r\nexport const getConfigHeaders = () => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  const configHeaders = {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  };\r\n\r\n  if (token) {\r\n    configHeaders.headers['x-access-token'] = token;\r\n  }\r\n\r\n  return configHeaders;\r\n};\r\n\r\nexport const loadCurrentUser = () => dispatch => {\r\n  const config = getConfigHeaders();\r\n  const url = `${ baseURL }/api/users/auth`;\r\n  \r\n  axios.get(url, config)\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: data.data\r\n      });\r\n\r\n    })\r\n    .catch(e => {\r\n      \r\n      handleResponseErrors(e, AUTH_FAIL)\r\n    });\r\n};\r\n\r\nexport const loginUser = userData => dispatch => {\r\n  \r\n  const url = `${ baseURL }/api/users/auth`;\r\n  \r\n  axios.post(url, userData)\r\n    .then(({ data }) => {\r\n      const { token } = data;\r\n      localStorage.setItem('token', token);\r\n      dispatch(loadCurrentUser());\r\n      \r\n      dispatch({\r\n        type: LOGIN_USER,\r\n        payload: token\r\n      });\r\n\r\n    })\r\n    .catch(e => handleResponseErrors(e, LOGIN_FAIL));\r\n};\r\n\r\n\r\nexport const registerUser = userData => dispatch => {\r\n\r\n  const url = `${ baseURL }/api/users`;\r\n\r\n  axios.post(url, userData)\r\n  .then(({ data }) => {\r\n    \r\n      const token = data.token;\r\n\r\n      localStorage.setItem('token', token);\r\n\r\n      dispatch(loadCurrentUser());\r\n\r\n      dispatch({\r\n        type: REGISTER_USER,\r\n        payload: token\r\n      });\r\n\r\n\r\n    })\r\n    .catch(e => {\r\n    \r\n      handleResponseErrors(e, REGISTER_FAIL)\r\n    });\r\n};\r\n\r\nexport const loadUsers = (id = null) => dispatch => {\r\n\r\n  const url = `${ baseURL }/api/users`;\r\n\r\n  axios.get(url, { params: { id: id ? id : ''}} )\r\n  .then(({ data }) => {\r\n      dispatch({\r\n        type: id ? LOAD_USER_WITH_ID : LOAD_USERS,\r\n        payload: data.data\r\n      });\r\n    })\r\n    .catch(e => {\r\n      const origin = id ? LOAD_USER_WITH_ID : LOAD_USERS;\r\n      handleResponseErrors(e, origin);\r\n    });\r\n};\r\nexport const updateUserRole = userData => dispatch => {\r\n\r\n  const url = `${ baseURL }/api/users/auth`;\r\n\r\n  axios.put(url, userData, getConfigHeaders() )\r\n  .then(({ data }) => {\r\n      dispatch({\r\n        type: UPDATE_USER_ROLE,\r\n        payload: data.data\r\n      });\r\n    })\r\n    .catch(e => {\r\n      \r\n      handleResponseErrors(e, UPDATE_USER_ROLE);\r\n    });\r\n};\r\n\r\nexport const deleteUsers = (id = null) => dispatch => {\r\n\r\n  const url = `${ baseURL }/api/users`;\r\n\r\n  axios.delete(url, { params: {id: id ? id: ''}})\r\n    .then(({ data }) => {\r\n    \r\n      dispatch({\r\n        type: id ? DELETE_USER_WITH_ID: DELETE_USERS,\r\n        payload: data\r\n      });\r\n\r\n    })\r\n    .catch(e => {\r\n      const origin = id ? DELETE_USER_WITH_ID: DELETE_USERS;\r\n      handleResponseErrors(e, origin);\r\n    });\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({\r\n        type: LOGOUT\r\n      });\r\n};","import React, { Fragment } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link }  from 'react-router-dom';\r\nimport { APP_NAME } from '../../_utils/constants';\r\nimport { logout } from '../../_actions/AuthActions';\r\nconst Navbar = ({ isAuthenticated, cartItems, logout }) => {\r\n\r\n  \r\n  return ( \r\n    <nav className=\"navbar\" data-test=\"navbar\">\r\n      <input type=\"checkbox\" id=\"navlink-control\" />\r\n      <div className=\"navbar-wrapper\">\r\n        <Link to='/' className=\"logo\">\r\n          <span className=\"logo-icon fa fa-users fa-2x\" />\r\n          <span className=\"logo-name\"> { APP_NAME } </span>\r\n        </Link>\r\n\r\n        <label htmlFor=\"navlink-control\" className=\"hamburger fa fa-bars fa-2x\"/>\r\n        <div className=\"navlinks\">\r\n          <Link to=\"/\" className=\"navlink\">Home</Link>\r\n          <Link to=\"/shop\" className=\"navlink\">Shop</Link>\r\n          <Link to=\"/cart\" className=\"navlink\">Cart  { cartItems.length > 0 && (<sup> <span className=\"badge badge-primary\"> { cartItems.length } </span> </sup>) } </Link>\r\n          {\r\n            isAuthenticated ? (\r\n              <Fragment>\r\n                <Link to=\"/dashboard\" className=\"navlink fa fa-user\" />\r\n                <span onClick={() => logout()} className=\"span\">Logout</span>\r\n              </Fragment>\r\n\r\n            ) : (\r\n              \r\n              <Fragment>\r\n                <Link to=\"/register\" className=\"navlink\">Signup</Link>\r\n                <Link to=\"/login\" className=\"navlink\">Login</Link>\r\n              </Fragment>\r\n            )\r\n          }\r\n          \r\n        </div>\r\n      </div>\r\n    </nav>\r\n   );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  cartItems: PropTypes.array.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  cartItems: state.cart.items,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  currentUser: state.auth.currentUser,\r\n})\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","export const APP_NAME = 'ShopOver';","import axios from 'axios';\r\n\r\nimport { baseURL, ADD_PRODUCT, GET_PRODUCT_ITEMS, LOADING, LOADED, DELETE_PRODUCT, UPDATE_PRODUCT, TOGGLE_PRODUCT_VISIBILITY, RESET_PRODUCT } from './types';\r\nimport { handleResponseErrors } from './AlertActions';\r\nimport { getConfigHeaders } from './AuthActions';\r\n\r\nexport const getProductItems = (filter='') => dispatch => {\r\n  dispatch({ type: LOADING});\r\n  const url = `${ baseURL}/api/products`;\r\n  let query = filter ? filter : '';\r\n\r\n  axios.get(url, { params: query})\r\n    .then(({ data }) => {\r\n      dispatch({ \r\n        type: GET_PRODUCT_ITEMS,\r\n        payload: data.data\r\n      });\r\n      dispatch({ type: LOADED });\r\n    })\r\n    .catch(e => handleResponseErrors(e, GET_PRODUCT_ITEMS));\r\n};\r\n\r\nexport const addProduct = productData => dispatch => {\r\n  dispatch({ type: LOADING});\r\n  const config = getConfigHeaders();\r\n  const url = `${ baseURL}/api/products`;\r\n  axios.post(url, productData, config)\r\n    .then(({ data }) => {\r\n      dispatch({ \r\n        type: ADD_PRODUCT,\r\n        payload: data.data\r\n      });\r\n      dispatch({ type: LOADED });\r\n    })\r\n    .catch(e => handleResponseErrors(e, ADD_PRODUCT));\r\n};\r\n\r\nexport const updateProductById = (productId, productData) => dispatch => {\r\n  dispatch({ type: LOADING});\r\n  const config = getConfigHeaders();\r\n  const url = `${ baseURL}/api/products/${productId}`;\r\n\r\n  axios.put(url, productData, config)\r\n    .then(({ data }) => {\r\n      dispatch({ \r\n        type: UPDATE_PRODUCT,\r\n        payload: data.data\r\n      });\r\n      dispatch({ type: LOADED });\r\n    })\r\n    .catch(e => handleResponseErrors(e, UPDATE_PRODUCT));\r\n};\r\n\r\nexport const toggleProductVisibility = (productId) => dispatch => {\r\n  dispatch({ type: LOADING});\r\n  const config = getConfigHeaders();\r\n  const url = `${ baseURL}/api/products/${productId}/visibility`;\r\n\r\n  axios.put(url, {},  config)\r\n    .then(({ data }) => {\r\n      dispatch({ \r\n        type: TOGGLE_PRODUCT_VISIBILITY,\r\n        payload: data.data\r\n      });\r\n      dispatch({ type: LOADED });\r\n    })\r\n    .catch(e => handleResponseErrors(e, TOGGLE_PRODUCT_VISIBILITY));\r\n};\r\n\r\nexport const resetProduct = () => dispatch => {\r\n  dispatch({ type: RESET_PRODUCT })\r\n};\r\n\r\nexport const deleteProductById = productId => dispatch => {\r\n  dispatch({ type: LOADING});\r\n  const config = getConfigHeaders();\r\n  const url = `${ baseURL}/api/products/${productId}`;\r\n\r\n  axios.delete(url, config)\r\n    .then(({ data }) => {\r\n      dispatch({ \r\n        type: DELETE_PRODUCT,\r\n        payload: data.data\r\n      });\r\n      dispatch({ type: LOADED });\r\n    })\r\n    .catch(e => handleResponseErrors(e, DELETE_PRODUCT));\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { addProductToCart } from '../../_actions/CartActions';\r\nconst ProductCard = ({ product,  addProductToCart }) => {\r\n  const handleAddToCart = () => {\r\n    const {_id, title, description, price, productImage} = product;\r\n    let toCartProduct = { _id, title, description, price, productImage, quantity: 1 };\r\n    addProductToCart(toCartProduct);\r\n  };\r\n\r\n  const { title, price, productImage } = product;\r\n  return ( \r\n        <div className=\"col-3\">\r\n          <div className=\"product-card\">\r\n            <img src=\"/img/products/product3.jpg\" className=\"product-card-image\" alt=\"Product 1 media\" />\r\n            <p className=\"product-title\"> { title && title } </p>\r\n\r\n            <p className=\"product-title\"> { price && price } </p>\r\n            <span className=\"product-card-rating\"> \r\n              <i className=\"fa fa-star-o\"></i> \r\n              <i className=\"fa fa-star-o\"></i> \r\n              <i className=\"fa fa-star-o\"></i> \r\n              <i className=\"fa fa-star-o\"></i> \r\n            </span>\r\n            <div className=\"product-card-cta\">\r\n              <button type=\"submit\" className=\"buy-now-cta\"> <i className=\"fa fa-user\"></i>  Buy Now </button>\r\n              <button onClick={() => handleAddToCart()} className=\"add-cart-cta\"> <i className=\"fa fa-heart\"></i> Add to Cart </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n   );\r\n}\r\n\r\nProductCard.propTypes = {\r\n  addProductToCart: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cartItems: state.cart.items\r\n});\r\nexport default connect(mapStateToProps, { addProductToCart })(ProductCard);","import {\r\n  ADD_CART,\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART,\r\n  CLEAR_CART,\r\n  UPDATE_PRODUCT_QUANTITY\r\n} from './types';\r\n\r\nexport const addProductToCart = product => (dispatch, getState) => {\r\n\r\n  const existingCartItems = getState().cart.items;\r\n\r\n  const foundItemInCart = existingCartItems.find(item => item._id === product._id);\r\n\r\n  if (!foundItemInCart) {\r\n    // Item is a new one\r\n    dispatch({\r\n      type: ADD_CART,\r\n      payload: product\r\n    })\r\n  } else {\r\n    \r\n    const updatedCartItems = existingCartItems.map(item => {\r\n      if (item._id === foundItemInCart._id) {\r\n        item.quantity = parseInt(item.quantity) + 1;\r\n      }\r\n      return item;\r\n    });\r\n    \r\n    dispatch({\r\n      type: UPDATE_CART,\r\n      payload: updatedCartItems\r\n    })\r\n  }\r\n};\r\n\r\nexport const removeItemFromCart = itemId => dispatch => {\r\n  dispatch({\r\n    type: REMOVE_FROM_CART,\r\n    payload: itemId\r\n  })\r\n}\r\n\r\nexport const updateProductQuantity = (productId, newQuantity) => (dispatch, getState) => {\r\n  const existingCartItems = getState().cart.items;\r\n  const updatedCartItems = existingCartItems.map(cartItem => {\r\n    if (cartItem._id === productId) {\r\n      cartItem.quantity = parseInt(newQuantity);\r\n    }\r\n    return cartItem;\r\n  });\r\n\r\n  dispatch({ \r\n    type: UPDATE_PRODUCT_QUANTITY,\r\n    payload: updatedCartItems\r\n  })\r\n\r\n\r\n};\r\nexport const clearCart = () => dispatch => {\r\n  dispatch({\r\n    type: CLEAR_CART\r\n  })\r\n}","import React from 'react';\r\n\r\nconst Title = ({\r\n  title,\r\n  subTitle\r\n}) => {\r\n  return ( \r\n    <div class=\"section-heading\">\r\n        <h2 class=\"section-title\"> { title && title } </h2>\r\n      <p class=\"sub-title\">  { subTitle && subTitle } </p>\r\n\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Title;","import React, { useEffect } from 'react';\r\nimport { connect }  from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getProductItems } from '../../_actions/ProductActions';\r\nimport ProductCard from '../ProductCard/ProductCard';\r\nimport Title from '../Title/Title';\r\n\r\nconst ProductItems = ({\r\n  getProductItems,\r\n  productItems\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    let filter = { visibility: true}\r\n    getProductItems(filter);\r\n  }, [])\r\n\r\n  return ( \r\n    <section>\r\n      <Title title='Featured Products' />\r\n      <div className=\"grid-wrapper\">\r\n        {\r\n          productItems && productItems.length > 0 ? productItems.map((product, idx) => <ProductCard key={idx} product={product} />) : \"Empty Product\"\r\n        }\r\n      </div>\r\n    </section>\r\n   );\r\n}\r\n ProductItems.propTypes = {\r\n   getProductItems: PropTypes.func.isRequired,\r\n   \r\n };\r\nconst mapStateToProps = state => ({\r\n  productItems: state.products.productItems\r\n});\r\nexport default connect(mapStateToProps, { getProductItems })(ProductItems);","import React from 'react';\r\nimport ProductItems from '../ProductItems/ProductItems';\r\n\r\nconst Home = ({\r\n  \r\n}) => {\r\n\r\n \r\n\r\n  return ( \r\n    // <div className='container'>\r\n      <ProductItems />\r\n    // </div>\r\n   );\r\n}\r\n \r\nexport default Home;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { clearAlert } from '../../_actions/AlertActions';\r\n\r\nconst Alert = ({ alertBucket, origin, type, clearAlert}) => {\r\n\r\n  const displayAlerts = origin ? alertBucket.filter(alert => alert.origin === origin) : alertBucket;\r\n  return (\r\n    <Fragment>\r\n      {displayAlerts.length > 0 && displayAlerts.map(alert => \r\n        (\r\n        <div key={`${alert.alertId}`} className={`alert alert-${type ? type : alert.type}`}>\r\n          { alert.alertText }\r\n          <span className='alert-close fa fa-close' onClick={() => clearAlert(alert.alertId)} />\r\n          </div>))\r\n      }    \r\n    </Fragment>\r\n  );\r\n}\r\nAlert.propTypes = {\r\n  alertBucket: PropTypes.array.isRequired,\r\n  type: PropTypes.string,\r\n  origin: PropTypes.string,\r\n  clearAlert: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  alertBucket: state.alerts.alertBucket\r\n});\r\nexport default connect(mapStateToProps, { clearAlert })(Alert);","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { APP_NAME } from '../../_utils/constants';\r\n\r\nimport { setAlert } from '../../_actions/AlertActions';\r\nimport { registerUser } from '../../_actions/AuthActions';\r\nimport { REGISTER_FAIL } from '../../_actions/types';\r\nimport Alert from '../Alert/Alert';\r\nconst Register = ({\r\n  isAuthenticated,\r\n  setAlert,\r\n  registerUser\r\n}) => {\r\n  const [data, setData] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    password: '',\r\n    confirm_password: ''\r\n  });\r\n  const handleChange = ({target}) => {\r\n    const { name, value } = target;\r\n    setData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n  };\r\n  const handleSignup = e => {\r\n    e.preventDefault();\r\n    const { firstname, lastname, email, password, confirm_password } = data;\r\n    if (password.trim() !== confirm_password.trim()) {\r\n      \r\n      return setAlert('Password do not match', REGISTER_FAIL);\r\n      \r\n    }\r\n   \r\n    const userData = { firstname, lastname, email, password };\r\n    registerUser(userData)\r\n  }\r\n\r\n  const { firstname, lastname, email, password, confirm_password } = data;\r\n  if(isAuthenticated) return <Redirect to='/dashboard' />\r\n  return ( \r\n    <Fragment>\r\n        <form className=\"form container\" onSubmit={handleSignup} name=\"signup-form\" id=\"signup-form\">\r\n          <h2 className=\"title\">  <span className='fa fa-users fa-2x' /> &nbsp; Signup</h2>\r\n          <p className=\"sub-title\">Join our community of passionate learners</p>\r\n          <sup>*</sup> means Required\r\n       \r\n          <Alert origin={REGISTER_FAIL} />\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"firstname\">Firstname<sup>*</sup></label>\r\n            <input type=\"text\" onChange={handleChange} name=\"firstname\" value={firstname} className=\"form-control\" id=\"firstanem\" placeholder=\"John Smith\" />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lastname\">Lastname<sup>*</sup></label>\r\n            <input type=\"text\" onChange={handleChange} name=\"lastname\" value={lastname} className=\"form-control\" id=\"firstanem\" placeholder=\"John Smith\" />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email<sup>*</sup></label>\r\n            <input type=\"email\" name=\"email\" onChange={handleChange}  value={email} className=\"form-control\" id=\"email\" placeholder=\"jsmith@js.com\" />\r\n            <small> {APP_NAME} uses Gravatar, so If you want Gravatar, use an associated email account</small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password<sup>*</sup></label>\r\n            <input type=\"password\" name=\"password\" onChange={handleChange} value={password} className=\"form-control\" id=\"password\"\r\n              placeholder=\"minimun of 8 characters\" />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirm_password\">Confirm Password<sup>*</sup></label>\r\n            <input type=\"password\" name=\"confirm_password\" onChange={handleChange}  value={confirm_password} className=\"form-control\" id=\"confirm_password\"\r\n              placeholder=\"Confirm password\" />\r\n          </div>\r\n\r\n          <button type=\"submit\" id=\"signup-btn\" className=\"btn btn-primary btn-md\"> <span className='fa fa-user' /> &nbsp; Signup </button>\r\n\r\n          <p className=\"my-2\">Already has an account? <Link to=\"/login\">Login</Link> </p>\r\n        </form>\r\n    </Fragment>\r\n   );\r\n}\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  registerUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n\r\n});\r\nexport default connect(mapStateToProps, { setAlert, registerUser })(Register);","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '../Alert/Alert';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { APP_NAME } from '../../_utils/constants';\r\nimport { loginUser } from '../../_actions/AuthActions';\r\nimport { LOGIN_FAIL } from '../../_actions/types';\r\n\r\nconst Login = ({\r\n  isAuthenticated,\r\n  loginUser\r\n}) => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const handleChange = ({ target }) => {\r\n    const { name, value} = target;\r\n    setData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n  };\r\n  const handleLogin = e => {\r\n    e.preventDefault();\r\n    loginUser(data)\r\n  }\r\n\r\n  const { email, password } = data;\r\n\r\n  if(isAuthenticated) return <Redirect to='/dashboard' />\r\n  return ( \r\n    <Fragment>\r\n        <form className=\"form container\" onSubmit={handleLogin} name=\"login-form\" id=\"login-form\">\r\n          <h2 className=\"text-lead\">  <span className='fa fa-users' /> &nbsp; Login </h2>\r\n          <p className=\"text-sub\">Join our community of passionate learners</p>\r\n          <sup>*</sup> means Required\r\n          <Alert origin={LOGIN_FAIL} />\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email<sup>*</sup></label>\r\n            <input type=\"email\" name=\"email\" onChange={handleChange}  value={email} className=\"form-control\" id=\"email\" placeholder=\"jsmith@js.com\" />\r\n            <small> {APP_NAME} uses Gravatar, so If you want Gravatar, use an associated email account</small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password<sup>*</sup></label>\r\n            <input type=\"password\" name=\"password\" onChange={handleChange} value={password} className=\"form-control\" id=\"password\"\r\n              placeholder=\"minimun of 8 characters\" />\r\n          </div>\r\n\r\n          <button type=\"submit\" id=\"login-btn\" className=\"btn btn-primary btn-md\"> <span className='fa fa-user' /> &nbsp; Login </button>\r\n\r\n          <p className=\"my-2\">Don't have an account? <Link to=\"/register\">Signup</Link> </p>\r\n        </form>\r\n    </Fragment>\r\n   );\r\n}\r\n \r\nLogin.propTypes = {\r\n  // setAlert: PropTypes.func.isRequired,\r\n  loginUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  // isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n// export default ;","import React, { Fragment } from 'react';\r\n\r\nconst Shop = () => {\r\n  return ( \r\n    <Fragment>\r\n      <h1> Shops </h1>\r\n    </Fragment>\r\n   );\r\n}\r\n \r\nexport default Shop;","import React, { Fragment } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { removeItemFromCart, updateProductQuantity } from '../../_actions/CartActions';\r\nconst CartItems = ({\r\n  cartItems,\r\n  updateProductQuantity,\r\n  removeItemFromCart\r\n}) => {\r\n\r\n  const updateQuantity = (e, productId) => {\r\n    updateProductQuantity(productId, e.target.value);\r\n  };\r\n  return (\r\n    <Fragment>\r\n\r\n    {\r\n      cartItems.length > 0 ? (\r\n        <table class=\"table cart-table\">\r\n          <thead>\r\n            <tr>\r\n              <th> S/N </th>\r\n              <th> Image </th>\r\n              <th> Name </th>\r\n              <th> Price </th>\r\n              <th> Quantity </th>\r\n              <th> Change Quantity </th>\r\n              <th> Remove </th>\r\n              <th> item total </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              cartItems.map((item, idx) => {\r\n                const {_id, title, price, quantity} = item;\r\n                \r\n                return (\r\n                  <tr>\r\n                    <td> { ++idx} </td>\r\n                    <td> <img src=\"./img/products/product1.jpg\" style={{width: '35px', height: '35px'}} /> </td>\r\n                    <td> { title && title } </td>\r\n                    <td> { price && price } </td>\r\n                    <td> { quantity && quantity }  </td>\r\n                    <td> <input type=\"number\" min=\"1\" onChange={(e) => updateQuantity(e, _id)} style={{width: '35px'}} /> </td>\r\n                    <td> <span className=\"fa fa-close\" onClick={() => removeItemFromCart(_id)} /> </td>\r\n                    <td> {  parseFloat(price) * parseInt(quantity) }  </td>\r\n                  \r\n                  </tr>\r\n                )\r\n              \r\n              })\r\n            }\r\n          \r\n          </tbody>\r\n      </table>\r\n      ) : <h1> No items in cart </h1>\r\n    }\r\n    </Fragment>\r\n   );\r\n}\r\n \r\nCartItems.propTypes = {\r\n  removeItemFromCart: PropTypes.func.isRequired,\r\n  updateProductQuantity: PropTypes.func.isRequired,\r\n  cartItems: PropTypes.array.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  cartItems: state.cart.items\r\n})\r\nexport default connect(mapStateToProps, {updateProductQuantity, removeItemFromCart})(CartItems);","import React, { Fragment, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '../Alert/Alert';\r\n\r\nimport CartItems from './CartItems';\r\nimport axios from 'axios';\r\nimport { baseURL } from '../../_actions/types';\r\nimport { setAlert } from '../../_actions/AlertActions';\r\n\r\nconst Cart = ({currentUser, setAlert, cartItems, history }) => {\r\n  const [paymentUrl, setPaymentUrl] = useState('');\r\n\r\n  const calculateTotalPay = () => {\r\n    let total = 0;\r\n\r\n    cartItems.map(({ price, quantity}) => {\r\n      total += parseFloat(price) * parseInt(quantity);\r\n    });\r\n\r\n    return total;\r\n  };\r\n\r\n  const handlePayment = () => {\r\n    // e.preventDefault();\r\n    if (!currentUser) {\r\n      return setAlert('You must Login to continue', 'CART_PAYMENT');\r\n    }\r\n    const { email } = currentUser;\r\n    const amount = calculateTotalPay() * 100; // to kobo\r\n    const paystackPayload = { email, amount, callback_url: `https://shopover.netlify.app/callback_url` };\r\n    const url = `${baseURL}/api/transactions`\r\n    axios.post(url, paystackPayload)\r\n      .then(({ data }) => {\r\n        setPaymentUrl(data.data.authorization_url)\r\n      })\r\n      .catch(e => { console.log(e)})\r\n    \r\n\r\n  };\r\n  \r\n  return ( \r\n    \r\n  <div class=\"container\">\r\n    <Alert origin={'CART_PAYMENT'} />\r\n    <CartItems />\r\n\r\n    {\r\n      cartItems.length > 0 && (\r\n\r\n        <div class=\"order-details clearfix\">\r\n          {/* onSubmit={handlePayment} */}\r\n          <span   class=\"cart-order-form\">\r\n            <input type=\"hidden\" value={calculateTotalPay()} />\r\n            <table>\r\n            <thead>\r\n              <tr>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              \r\n              <tr>\r\n                <td> Total Pay </td>\r\n                <td> { calculateTotalPay()} </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n            <button onClick={() => handlePayment()} class=\"cart-order-btn\"> Place Order </button>\r\n\r\n            {\r\n              paymentUrl && <a href={paymentUrl}> Pay NOW </a>\r\n            }\r\n\r\n          {/* </form> */}\r\n          </span>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  </div>\r\n  \r\n   );\r\n}\r\n \r\nCart.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  cartItems: PropTypes.array.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  cartItems: state.cart.items,\r\n  currentUser: state.auth.currentUser,\r\n})\r\nexport default connect(mapStateToProps, { setAlert })(Cart);","import React, { Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../_actions/AuthActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { APP_NAME } from '../_utils/constants';\r\n\r\nconst AuthSidebar = ({ \r\n  logout,\r\n  currentUser\r\n }) => {\r\n\r\n  \r\n  \r\n  return (\r\n    <Fragment>\r\n      <aside className=\"auth-sidebar\">\r\n        <label htmlFor=\"auth-sidebar-control\" className=\"auth-sidebar-close fa fa-close\" />\r\n        <header className=\"sidebar-header\">\r\n          <Link to='/'>\r\n            <span className=\"sidebar-icon fa fa-lightbulb-o fa-2x\" />\r\n            <span className=\"sidebar-name\"> { APP_NAME} </span>\r\n          </Link>\r\n        </header>\r\n        <ul className=\"sidebar-actions\">\r\n          <li>\r\n            <Link to='/product-manager' className=\"auth-sidebar-link\"> <i className=\"fa fa-book-open\" /> &nbsp;  Products</Link>\r\n          </li>\r\n\r\n          {\r\n            currentUser && currentUser.roles.includes('admin') && (\r\n\r\n              <Fragment>\r\n                <li>\r\n                  <Link to='/collections' className=\"auth-sidebar-link\"> <span className=\"fas fa-book-reader\" /> &nbsp; Collections</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to='/user-manager' className=\"auth-sidebar-link\"> <span className=\"fas fa-book-reader\" /> &nbsp; User Admin</Link>\r\n                </li>\r\n              </Fragment>\r\n\r\n            )\r\n          }\r\n\r\n          \r\n          <li>\r\n            <span onClick={() => logout()} className=\"auth-sidebar-link\"> <span className=\"fa fa-sign-out-alt\" /> Logout</span>           \r\n          </li>\r\n          \r\n        </ul>\r\n      </aside>\r\n    </Fragment>\r\n  );\r\n}\r\n \r\nAuthSidebar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n const mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    currentUser: state.auth.currentUser\r\n });\r\nexport default connect(mapStateToProps, { logout })(AuthSidebar);\r\n","import React, { Fragment } from 'react';\r\nimport AuthSidebar from './AuthSidebar';\r\n\r\nconst AuthContainer = ({ children }) => {\r\n  return (\r\n    <Fragment>\r\n       <div className=\"auth-container\">\r\n        <input type=\"checkbox\"  id=\"auth-sidebar-control\"/>\r\n        <label htmlFor=\"auth-sidebar-control\" className=\"auth-sidebar-handle fa fa-bars fa-2x\" />\r\n        <AuthSidebar />\r\n        <div className=\"auth-main\">         \r\n          <div className=\"auth-wrapper\">\r\n            { children }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n \r\nexport default AuthContainer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AuthContainer from '../AuthContainer';\r\n\r\nconst Dashboard = ({\r\n  currentUser\r\n}) => {\r\n  return ( \r\n    <AuthContainer>\r\n      <h1> Hellow { currentUser && currentUser.firstname } </h1>\r\n    </AuthContainer>\r\n   );\r\n}\r\n \r\nDashboard.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  currentUser: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  currentUser: state.auth.currentUser,\r\n});\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nconst Authenticate = ({ component: Component, isAuthenticated, ...rest}) => (\r\n  <Route \r\n\r\n    {...rest}\r\n\r\n    render={props => !isAuthenticated ?\r\n     (<Redirect to='/' />) : \r\n     (<Component {...props} />)\r\n    }\r\n\r\n  />\r\n);\r\n \r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps)(Authenticate);","import React from 'react';\r\nimport { APP_NAME } from '../_utils/constants';\r\n\r\nconst Modal = ({\r\n  dismiss,\r\n  children,\r\n  isOpen,\r\n  title\r\n\r\n}) => {\r\n  return (\r\n    <div className={`modal ${isOpen? 'show' : ''}`}>\r\n        <div className=\"modal-container\">\r\n          <span className=\"modal-close fa fa-close\" onClick={() => dismiss()}></span>\r\n          <div className=\"modal-header\">\r\n            <h1> { title ? title : APP_NAME} </h1>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            {\r\n              children \r\n            }\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n \r\nexport default Modal;","import React, { useState, useEffect } from 'react';\r\nimport { connect }  from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { baseURL, ADD_PRODUCT } from '../../_actions/types';\r\nimport { addProduct } from '../../_actions/ProductActions';\r\nimport Alert from '../Alert/Alert';\r\nconst AddProductForm = ({ dismiss, addProduct, newProduct }) => {\r\n\r\n  const [productCategory, setProductCategory] = useState([]);\r\n  const [data, setData] = useState({\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n    productImage: \"\",\r\n    category: '',\r\n    tags: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(newProduct !== null) dismiss();\r\n    }, [newProduct]);\r\n    \r\n  useEffect(() => {\r\n    const url = `${ baseURL }/api/collections`;\r\n    axios.get(url).then(({ data }) => {\r\n      setProductCategory(data.data)\r\n    }).catch(e => console.log('Error loading categories...', e))\r\n  }, []);\r\n  \r\n  \r\n  const handleChange = ({ target}) => {\r\n    const { name, value} = target;\r\n    setData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    addProduct(data);\r\n  };\r\n  \r\n  \r\n  const {title, price, category, description, tags, productImage} = data;\r\n\r\n  return ( \r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n\r\n      <Alert origin={ADD_PRODUCT} />\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"title\"> Product title</label>\r\n        <input type=\"text\" value={title} onChange={handleChange} className=\"form-control\" name=\"title\" id=\"title\" placeholder=\"Enter title\" required />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"description\"> Product Description</label>\r\n        <textarea type=\"text\"  value={description}  onChange={handleChange}  className=\"form-control\" name=\"description\" id=\"description\" placeholder=\"ENter a short summary\" required />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"image\"> Product image</label>\r\n        <input type=\"url\"  value={productImage}   onChange={handleChange}  className=\"form-control\" name=\"productImage\" id=\"image\" placeholder=\"Enter image URL\" required />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"price\"> Product price</label>\r\n        <input type=\"text\" value={price}   onChange={handleChange}  className=\"form-control\" pattern=\"[0-9]+\" name=\"price\" id=\"price\" placeholder=\"30\" required />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"category\"> Product category</label>\r\n        <select className=\"form-control\"  onChange={handleChange}  name=\"category\" id=\"category\"  required>\r\n          <option value=\"\" selected> ---select ---</option>\r\n          {\r\n            productCategory.map(cat => {\r\n              const {_id, title } = cat;\r\n              return (\r\n                <option value={ _id }> { title && title }  </option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"tags\"> Product tags</label>\r\n        <input type=\"text\"  value={tags}  onChange={handleChange}  className=\"form-control\" name=\"tags\" id=\"tags\" placeholder=\"bucket, chin-chin, mango\" required />\r\n        <small> Enter comma separetd list </small>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\"> Add Product</button>\r\n    </form>\r\n   );\r\n}\r\n\r\nAddProductForm.propTypes = {\r\n   addProduct: PropTypes.func.isRequired,\r\n   \r\n };\r\nconst mapStateToProps = state => ({\r\n  newProduct: state.products.newProduct,\r\n});\r\nexport default connect(mapStateToProps, { addProduct })(AddProductForm);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect }  from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { baseURL, UPDATE_PRODUCT } from '../../_actions/types';\r\nimport { updateProductById } from '../../_actions/ProductActions';\r\nimport Alert from '../Alert/Alert';\r\n\r\nconst EditProductForm = ({ productRecord, dismiss, updateProductById, productUpdated }) => {\r\n\r\n\r\n  const [productCategory, setProductCategory] = useState([]);\r\n  const [data, setData] = useState({\r\n    title: productRecord.title ? productRecord.title : '',\r\n    description: productRecord.description ? productRecord.description : '',\r\n    price: productRecord.price ? productRecord.price : '',\r\n    productImage: productRecord.productImage ? productRecord.productImage : '',\r\n    category: '',\r\n    tags: productRecord.tags ? productRecord.tags.join(',') : '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(productUpdated !== null) dismiss();\r\n    }, [productUpdated]);\r\n    \r\n  useEffect(() => {\r\n    const url = `${ baseURL }/api/collections`;\r\n    axios.get(url).then(({ data }) => {\r\n      setProductCategory(data.data)\r\n    }).catch(e => console.log('Error loading categories...', e))\r\n  }, []);\r\n  \r\n  \r\n  const handleChange = ({ target}) => {\r\n    const { name, value} = target;\r\n    setData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    updateProductById(productRecord._id, data);\r\n  };\r\n  \r\n  \r\n  const {title, price, category, description, tags, productImage} = data;\r\n\r\n  return ( \r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n\r\n      <Alert origin={UPDATE_PRODUCT} />\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"title\"> Product title</label>\r\n        <input type=\"text\" value={title} onChange={handleChange} className=\"form-control\" name=\"title\" id=\"title\" placeholder=\"Enter title\"  />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"description\"> Product Description</label>\r\n        <textarea type=\"text\"  value={description}  onChange={handleChange}  className=\"form-control\" name=\"description\" id=\"description\" placeholder=\"ENter a short summary\"  />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"image\"> Product image</label>\r\n        <input type=\"url\"  value={productImage}   onChange={handleChange}  className=\"form-control\" name=\"productImage\" id=\"image\" placeholder=\"Enter image URL\"  />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"price\"> Product price</label>\r\n        <input type=\"text\" value={price}   onChange={handleChange}  className=\"form-control\" pattern=\"[0-9]+\" name=\"price\" id=\"price\" placeholder=\"30\"  />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"category\"> Product category</label>\r\n        <select className=\"form-control\"  onChange={handleChange}  name=\"category\" id=\"category\"  >\r\n          <option value=\"\" selected> ---select ---</option>\r\n          {\r\n            productCategory.map(cat => {\r\n              const {_id, title } = cat;\r\n              return (\r\n                <option value={ _id }> { title && title }  </option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"tags\"> Product tags</label>\r\n        <input type=\"text\"  value={tags}  onChange={handleChange}  className=\"form-control\" name=\"tags\" id=\"tags\" placeholder=\"bucket, chin-chin, mango\"  />\r\n        <small> Enter comma separetd list </small>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\"> Update Product</button>\r\n    </form>\r\n   );\r\n}\r\n\r\nEditProductForm.propTypes = {\r\n   updateProductById: PropTypes.func.isRequired,\r\n };\r\nconst mapStateToProps = state => ({\r\n  productUpdated: state.products.productUpdated,\r\n});\r\nexport default connect(mapStateToProps, { updateProductById })(EditProductForm);\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect }  from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AuthContainer from '../AuthContainer';\r\nimport Modal from '../Modal';\r\nimport { getProductItems, deleteProductById, toggleProductVisibility, resetProduct } from '../../_actions/ProductActions';\r\nimport AddProductForm from './AddProductForm';\r\nimport EditProductForm from './EditProductForm';\r\n\r\n\r\nconst ProductManager = ({currentUser, getProductItems, toggleProductVisibility, productVisibility, resetProduct, deleteProductById, productItems,  newProduct, productUpdated, productDeleted }) => {\r\n  const [shouldAddProduct, handleAddProductModal] = useState(false);\r\n  const [shouldEditProduct, handleEditProductModal] = useState({\r\n    productItemToEdit: '',\r\n    canEdit: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    const filter = currentUser.roles.includes('admin') ? '' : { owner: currentUser._id}\r\n    getProductItems(filter);\r\n  } , [newProduct, productUpdated, productDeleted, productVisibility]);\r\n\r\n  const isAdmin = () => {\r\n    return currentUser.roles.includes('admin');\r\n  };\r\n\r\n  const handleAddProductRequest = (status) => {\r\n    handleAddProductModal(status);\r\n    resetProduct();\r\n  };\r\n  const handleEditProductRequest = (productRecord, shouldUserEdit = true) => {\r\n    handleEditProductModal(prev => ({\r\n      ...prev,\r\n      productItemToEdit: productRecord,\r\n      canEdit: shouldUserEdit\r\n    }));\r\n  };\r\n  const handleEditProduct = status => {\r\n    handleEditProductModal(prev => ({\r\n      ...prev,\r\n      canEdit: status\r\n    }));\r\n    resetProduct();\r\n  }\r\n  const handleDeleteProduct = id => {\r\n    if (window.confirm(\"Are you sure ? \")) {\r\n      deleteProductById(id);\r\n    }\r\n  };\r\n\r\n  const { productItemToEdit, canEdit } = shouldEditProduct;\r\n  return ( \r\n    <AuthContainer>\r\n      <div className=\"auth-action\">\r\n        <span className=\"\" onClick={() => handleAddProductRequest(true)}> Add Product</span>\r\n      </div>\r\n      {\r\n        shouldAddProduct && \r\n        <Modal isOpen={shouldAddProduct} dismiss={() => handleAddProductRequest(false)}>\r\n          <AddProductForm dismiss={() => handleAddProductRequest(false)} />\r\n        </Modal>\r\n      }\r\n\r\n      {\r\n        canEdit && \r\n        <Modal isOpen={canEdit} dismiss={() => handleEditProduct(false)}>\r\n          <EditProductForm productRecord={productItemToEdit} dismiss={() => handleEditProduct(false)} />\r\n        </Modal>\r\n      }\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td> S/N </td>\r\n            <td> Title </td>\r\n            <td> Price </td>\r\n           \r\n            <td> Edit </td>\r\n           \r\n            <td> Visibility </td> \r\n            {\r\n              isAdmin()  && <td> Delete </td>\r\n            }\r\n            \r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n\r\n          {\r\n            productItems.length > 0 && productItems.map((product, idx) => {\r\n              let {_id, title, price, owner, visibility } = product;\r\n              const shouldUserEdit = owner._id === currentUser._id ? true : false ;\r\n              \r\n              return (\r\n                <tr>\r\n                  <td> { ++idx} </td>\r\n                  <td> { title && title} </td>\r\n                  <td> { price && price} </td>\r\n                                      \r\n                  <td> <span className=\"fa fa-edit\" onClick={() => handleEditProductRequest(product, shouldUserEdit)} /> </td>\r\n                  \r\n                 \r\n                  {\r\n                    isAdmin() ? (<td> <span onClick={() => toggleProductVisibility(_id)}> {visibility ? 'HIDE': 'SHOW'} </span></td>) \r\n                    : (<td> <span> {visibility ? 'HIDE': 'SHOW'} </span></td>)\r\n                    \r\n                  \r\n                  }\r\n                  {\r\n                    isAdmin()   && \r\n                    <td> <span className=\"fa fa-close\" onClick={() => handleDeleteProduct(_id)} /> </td>\r\n                    \r\n                  }\r\n                </tr>\r\n              )\r\n            \r\n            })\r\n          }\r\n        </tbody>\r\n\r\n    </table>\r\n\r\n\r\n\r\n    </AuthContainer>\r\n   );\r\n}\r\n ProductManager.propTypes = {\r\n   getProductItems: PropTypes.func.isRequired,\r\n   deleteProductById: PropTypes.func.isRequired,\r\n   resetProduct: PropTypes.func.isRequired,\r\n   toggleProductVisibility: PropTypes.func.isRequired,\r\n   \r\n };\r\nconst mapStateToProps = state => ({\r\n  productItems: state.products.productItems,\r\n  newProduct: state.products.newProduct,\r\n  productUpdated: state.products.productUpdated,\r\n  productDeleted: state.products.productDeleted,\r\n  productVisibility: state.products.productVisibility,\r\n  currentUser: state.auth.currentUser,\r\n});\r\nexport default connect(mapStateToProps, { getProductItems, toggleProductVisibility, resetProduct, deleteProductById })(ProductManager);","import axios from 'axios';\r\n\r\nimport { \r\n  CREATE_COLLECTION,\r\n  EDIT_COLLECTION,\r\n  RESET_COLLECTION,\r\n  DELETE_COLLECTION,\r\n  LOADED,\r\n  baseURL,\r\n  GET_COLLECTIONS\r\n} from './types';\r\nimport { handleResponseErrors } from './AlertActions';\r\nimport { getConfigHeaders } from './AuthActions';\r\n\r\nexport const createCollection = collectionData => dispatch => {\r\n  dispatch({ type: LOADED});\r\n  const config = getConfigHeaders();\r\n  const url = `${ baseURL }/api/collections`;\r\n\r\n  axios.post(url, collectionData, config)\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: CREATE_COLLECTION,\r\n        payload: data.data\r\n      });\r\n\r\n      dispatch({ type: LOADED })\r\n    })\r\n    .catch(e => handleResponseErrors(e, CREATE_COLLECTION))\r\n};\r\nexport const updateCollectionById = (collectionId, collectionData) => dispatch => {\r\n  dispatch({ type: LOADED});\r\n  const config = getConfigHeaders();\r\n  const url = `${ baseURL }/api/collections/${ collectionId }`;\r\n  axios.put(url, collectionData, config)\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: EDIT_COLLECTION,\r\n        payload: data.data\r\n      });\r\n\r\n      dispatch({ type: LOADED })\r\n    })\r\n    .catch(e => handleResponseErrors(e, EDIT_COLLECTION))\r\n};\r\n\r\nexport const getCollections = () => dispatch => {\r\n  dispatch({ type: LOADED});\r\n  const config = getConfigHeaders();\r\n  const url = `${ baseURL }/api/collections`;\r\n\r\n  axios.get(url,  config)\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: GET_COLLECTIONS,\r\n        payload: data.data\r\n      });\r\n\r\n      dispatch({ type: LOADED })\r\n    })\r\n    .catch(e => handleResponseErrors(e, GET_COLLECTIONS))\r\n};\r\n\r\nexport const resetCollection = () => dispatch => {\r\n  dispatch({type: RESET_COLLECTION});\r\n};\r\nexport const deleteCollectionById = collectionId => dispatch => {\r\n  dispatch({ type: LOADED});\r\n  const config = getConfigHeaders();\r\n  const url = `${ baseURL }/api/collections/${ collectionId}`;\r\n  console.log('col ', collectionId)\r\n\r\n  axios.delete(url,  config)\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: DELETE_COLLECTION,\r\n        payload: data.data\r\n      });\r\n\r\n      dispatch({ type: LOADED })\r\n    })\r\n    .catch(e => handleResponseErrors(e, DELETE_COLLECTION))\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { connect }  from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { CREATE_COLLECTION } from '../../_actions/types';\r\nimport { createCollection } from '../../_actions/CollectionActions';\r\nimport Alert from '../Alert/Alert';\r\nconst AddCollectionForm = ({ dismiss, createCollection, newCollection }) => {\r\n\r\n  const [data, setData] = useState({\r\n    title: '',\r\n    description: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(newCollection !== null) dismiss();\r\n    }, [newCollection]);\r\n    \r\n  \r\n  \r\n  const handleChange = ({ target}) => {\r\n    const { name, value} = target;\r\n    setData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    createCollection(data);\r\n  };\r\n  \r\n  \r\n  const {title, description} = data;\r\n\r\n  return ( \r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n\r\n      <Alert origin={CREATE_COLLECTION} />\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"title\"> Collection title</label>\r\n        <input type=\"text\" value={title} onChange={handleChange} className=\"form-control\" name=\"title\" id=\"title\" placeholder=\"Enter title\" required />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"description\"> Collection Description</label>\r\n        <textarea type=\"text\"  value={description}  onChange={handleChange}  className=\"form-control\" name=\"description\" id=\"description\" placeholder=\"ENter a short summary\" required />\r\n      </div>\r\n      \r\n      <button type=\"submit\" className=\"btn btn-primary\"> Create Collection</button>\r\n    </form>\r\n   );\r\n}\r\n\r\nAddCollectionForm.propTypes = {\r\n   createCollection: PropTypes.func.isRequired,\r\n   \r\n };\r\nconst mapStateToProps = state => ({\r\n  newCollection: state.collections.newCollection,\r\n});\r\nexport default connect(mapStateToProps, { createCollection })(AddCollectionForm);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect }  from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { EDIT_COLLECTION } from '../../_actions/types';\r\nimport { updateCollectionById } from '../../_actions/CollectionActions';\r\nimport Alert from '../Alert/Alert';\r\n\r\nconst EditCollectionForm = ({ dismiss, collectionId, prevData, updateCollectionById, collectionEdited }) => {\r\n  \r\n  const [data, setData] = useState({\r\n    title: prevData.title ? prevData.title : '',\r\n    description: prevData.description ? prevData.description : '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(collectionEdited !== null) dismiss();\r\n    }, [collectionEdited]);\r\n    \r\n  const handleChange = ({ target}) => {\r\n    const { name, value} = target;\r\n    setData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    updateCollectionById(collectionId, data);\r\n  };\r\n  \r\n  const { title, description } = data;\r\n\r\n  return ( \r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n\r\n      <Alert origin={EDIT_COLLECTION} />\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"title\"> Collection title</label>\r\n        <input type=\"text\" value={title} onChange={handleChange} className=\"form-control\" name=\"title\" id=\"title\"   />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"description\"> Collection Description</label>\r\n        <textarea type=\"text\"  value={description}  onChange={handleChange}  className=\"form-control\" name=\"description\" id=\"description\"  />\r\n      </div>\r\n      \r\n      <button type=\"submit\" className=\"btn btn-primary\"> Update Collection</button>\r\n      \r\n    </form>\r\n   );\r\n}\r\n\r\nEditCollectionForm.propTypes = {\r\n   updateCollectionById: PropTypes.func.isRequired,\r\n };\r\n\r\nconst mapStateToProps = state => ({\r\n  collectionEdited: state.collections.collectionEdited,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateCollectionById })(EditCollectionForm);\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect }  from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AuthContainer from '../AuthContainer';\r\nimport Modal from '../Modal';\r\nimport { createCollection, getCollections, resetCollection, deleteCollectionById } from '../../_actions/CollectionActions';\r\nimport AddCollectionForm from './AddCollectionForm';\r\nimport EditCollectionForm from './EditCollectionForm';\r\n\r\nconst CollectionManager = ({ getCollections, resetCollection,  deleteCollectionById, collectionItems, newCollection, collectionEdited, collectionDeleted}) => {\r\n\r\n  const [canAddCollection, setCanAddCollection] = useState(false);\r\n  // const [ canEditCollection , setCanEditCollection] = useState(false);\r\n  const [editCollectionData, setEditCollectionData] = useState({\r\n    collectionId: '',\r\n    canEditCollection: false,\r\n    collectionInfo: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCollections();\r\n  } , [newCollection, collectionEdited, collectionDeleted]);\r\n\r\n  const handleCanAddCollectionRequest = (status) => {\r\n    setCanAddCollection(status);\r\n    resetCollection();\r\n  };\r\n\r\n  const startEditCollectionRequest = ( collectionId = '', collectionInfo) => {\r\n    setEditCollectionData(prev => ({\r\n      ...prev,\r\n      collectionId: collectionId,\r\n      canEditCollection: true,\r\n      collectionInfo: collectionInfo\r\n    }));\r\n  };\r\n  \r\n  const dismissEditCollection = () => {\r\n      setEditCollectionData(prev => ({\r\n        ...prev,\r\n        canEditCollection: false\r\n      }));\r\n      resetCollection();\r\n  \r\n  }\r\n\r\n  const handleDeleteCollection = id => {\r\n    if (window.confirm(\"Are you sure ? \")) {\r\n      deleteCollectionById(id);\r\n    }\r\n  };\r\n\r\n  const { collectionId, canEditCollection, collectionInfo } = editCollectionData;\r\n  return ( \r\n    <AuthContainer>\r\n      <div className=\"auth-action\">\r\n        <span className=\"\" onClick={() => setCanAddCollection(true)}> Add Collection</span>\r\n      </div>\r\n      {\r\n        canAddCollection && \r\n        <Modal isOpen={canAddCollection} dismiss={() => handleCanAddCollectionRequest(false)}>\r\n          <AddCollectionForm dismiss={() => handleCanAddCollectionRequest(false)} />\r\n        </Modal>\r\n      }\r\n\r\n      {\r\n        canEditCollection && \r\n        <Modal isOpen={canEditCollection} dismiss={() => dismissEditCollection()}>\r\n          <EditCollectionForm collectionId={collectionId} prevData={collectionInfo} dismiss={() => dismissEditCollection()} />\r\n        </Modal>\r\n      }\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td> S/N </td>\r\n            <td> Title </td>\r\n            <td> Description </td>\r\n            <td> Edit </td>\r\n            <td> Delete </td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n\r\n          {\r\n            collectionItems.length > 0 && collectionItems.map((collection, idx) => {\r\n              let {_id, title, description} = collection;\r\n              \r\n              return (\r\n                <tr>\r\n                  <td> { ++idx} </td>\r\n                  <td> { title && title} </td>\r\n                  <td> { description && description.slice(0, 20)} </td>\r\n                  {/* <td> { price && price} </td> */}\r\n                  <td> <span className=\"fa fa-edit\" onClick={() => startEditCollectionRequest(_id, collection)} /> </td>\r\n                  <td> <span className=\"fa fa-close\" onClick={() => handleDeleteCollection(_id)} /> </td>\r\n                </tr>\r\n              )\r\n            \r\n            })\r\n          }\r\n        </tbody>\r\n\r\n    </table>\r\n\r\n\r\n\r\n    </AuthContainer>\r\n   );\r\n}\r\n CollectionManager.propTypes = {\r\n   getCollections: PropTypes.func.isRequired,\r\n   deleteCollectionById: PropTypes.func.isRequired,\r\n   createCollection: PropTypes.func.isRequired,\r\n   resetCollection: PropTypes.func.isRequired,\r\n   \r\n };\r\nconst mapStateToProps = state => ({\r\n  newCollection: state.collections.newCollection,\r\n  collectionEdited: state.collections.collectionEdited,\r\n  collectionDeleted: state.collections.collectionDeleted,\r\n  collectionItems: state.collections.collectionItems,\r\n});\r\nexport default connect(mapStateToProps, { getCollections, createCollection, resetCollection, deleteCollectionById })(CollectionManager);","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect }  from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AuthContainer from '../AuthContainer';\r\nimport Modal from '../Modal';\r\nimport { loadUsers, deleteUsers } from '../../_actions/AuthActions';\r\n\r\n\r\n\r\nconst UserManager = ({currentUser, loadUsers, deleteUsers, userData, prevUser }) => {\r\n  \r\n\r\n  useEffect(() => {\r\n    const filterID = currentUser.roles.includes('admin') ? null : currentUser._id;\r\n    loadUsers(filterID);\r\n  } , [ prevUser]);\r\n\r\n  const handleDeleteUserById = id => {\r\n    if (window.confirm('Are you sure?' + id)) {\r\n      deleteUsers(id);\r\n    }\r\n  }\r\n  const handleFlushAllUsers = () => {\r\n    if (window.confirm('Are you sure?')) {\r\n      deleteUsers();\r\n    }\r\n  }\r\n  \r\n  return ( \r\n    <AuthContainer>\r\n      <div className=\"auth-action\">\r\n        <span onClick={() => handleFlushAllUsers()}> Fluash ALl { userData.length } </span>\r\n      </div>\r\n     \r\n    \r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td> S/N </td>\r\n                <td> Firstname </td>\r\n                <td> Lastname </td>\r\n                \r\n                <td> Delete </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n\r\n              {\r\n                userData.length > 0  && userData.map((user, idx) => {\r\n                  let {_id, firstname, lastname } = user;\r\n                  \r\n                  return (\r\n                    <tr>\r\n                      <td> { ++idx} </td>\r\n                      <td> { firstname && firstname} </td>\r\n                      <td> { lastname && lastname} </td>\r\n                      <td> <span className=\"fa fa-close\" onClick={() => handleDeleteUserById(_id)} /> </td>\r\n                    </tr>\r\n                  )\r\n                \r\n                })\r\n              }\r\n            </tbody>\r\n\r\n        </table>\r\n      \r\n  \r\n\r\n\r\n\r\n\r\n    </AuthContainer>\r\n   );\r\n}\r\n UserManager.propTypes = {\r\n   loadUsers: PropTypes.func.isRequired,\r\n   deleteUsers: PropTypes.func.isRequired,\r\n   \r\n };\r\nconst mapStateToProps = state => ({ \r\n  currentUser: state.auth.currentUser,\r\n  userData: state.auth.userData,\r\n  prevUser: state.auth.prevUser,\r\n});\r\nexport default connect(mapStateToProps, { loadUsers, deleteUsers })(UserManager);","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { updateUserRole } from '../../_actions/AuthActions';\r\nimport { UPDATE_USER_ROLE } from '../../_actions/types';\r\nimport Alert from '../Alert/Alert';\r\n\r\nconst Secret = ({\r\n  isAuthenticated,\r\n  updateUserRole\r\n}) => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n  });\r\n  const handleChange = ({ target }) => {\r\n    const { name, value} = target;\r\n    setData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n  };\r\n  const handleUserRoleUpdate = e => {\r\n    e.preventDefault();\r\n    updateUserRole(data)\r\n  }\r\n\r\n  const { email } = data;\r\n\r\n\r\n  return ( \r\n    <Fragment>\r\n        <form className=\"form container\" onSubmit={handleUserRoleUpdate} name=\"login-form\" id=\"login-form\">\r\n          <h2 className=\"text-lead\">  <span className='fa fa-users' /> &nbsp; Update User Role </h2>\r\n          \r\n          <sup>*</sup> means Required\r\n\r\n          <Alert origin={UPDATE_USER_ROLE} />\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email<sup>*</sup></label>\r\n            <input type=\"email\" name=\"email\" onChange={handleChange}  value={email} className=\"form-control\" id=\"email\" placeholder=\"jsmith@js.com\" />\r\n            \r\n          </div>\r\n\r\n          \r\n\r\n          <button type=\"submit\" id=\"login-btn\" className=\"btn btn-primary btn-md\"> <span className='fa fa-user' /> &nbsp; Update User Auth </button>\r\n\r\n          \r\n        </form>\r\n    </Fragment>\r\n   );\r\n}\r\n \r\nSecret.propTypes = {\r\n  // setAlert: PropTypes.func.isRequired,\r\n  updateUserRole: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { updateUserRole })(Secret);\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { baseURL } from '../../_actions/types';\r\n\r\nconst CallbackHandler = ({ location }) => {\r\n  const [hasCompleted, setHasCompleted] = useState(false)\r\n  const getPaystackTransactionReference = () => {\r\n    const query = new URLSearchParams(location.search);\r\n    return query.get('reference');\r\n  }\r\n\r\n  \r\n    useEffect(() => {\r\n      const reference = getPaystackTransactionReference();\r\n      const url = `${ baseURL}/api/transactions/verify`;\r\n      const body = { reference };\r\n      axios\r\n        .post(url, body)\r\n        .then(({ data }) => {\r\n          console.log('CallbackHandler data', data)\r\n          setHasCompleted(true)\r\n        })\r\n        .catch(e => {})\r\n    }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      {\r\n        hasCompleted ? (<Redirect to={'/'}/>) : <h1> Loading...</h1>\r\n      }\r\n    </Fragment>\r\n  );\r\n}\r\n \r\nexport default CallbackHandler;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport store from './store';\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport Register from './components/Register/Register';\nimport Login from './components/Login/Login';\nimport Shop from './components/Shop/Shop';\nimport Cart from './components/Cart/Cart';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport { loadCurrentUser } from './_actions/AuthActions';\nimport Authenticate from './components/Dashboard/Authenticate';\nimport ProductManager from './components/ProductManager/ProductManager';\nimport CollectionManager from './components/Collections/CollectionManager';\nimport UserManager from './components/UserManager/UserManager';\nimport Secret from './components/Login/Secret';\nimport CallbackHandler from './components/TransactionManager/CallbackHandler';\n\nstore.dispatch(loadCurrentUser());\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <Navbar />\n          <Route path='/' exact component={Home} />\n          <Route path='/callback_url' exact component={CallbackHandler} />\n          <Route path='/shop' exact component={Shop} />\n          <Route path='/cart' exact component={Cart} />\n          <Route path='/register' exact component={Register} />\n          <Route path='/login' exact component={Login} />\n          <Route path='/secret' exact component={Secret} />\n          <Authenticate path='/dashboard' exact component={Dashboard} />\n          <Authenticate path='/product-manager' exact component={ProductManager} />\n          <Authenticate path='/collections' exact component={CollectionManager} />\n          <Authenticate path='/user-manager' exact component={UserManager} />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}